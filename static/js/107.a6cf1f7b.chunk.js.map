{"version":3,"file":"static/js/107.a6cf1f7b.chunk.js","mappings":"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","sources":["components/Card/Card.styled.jsx","components/Loader/Loader.jsx","components/Pagination/Pagination.jsx","components/Card/Card.jsx","pages/HomePage/HomePage.jsx","service/api/movies.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport { Link } from 'react-router-dom';\n\nexport const Ul = styled.ul`\n  list-style: none;\n  display: grid;\n  padding: 20px;\n  padding-left: 30px;\n  margin: 0;\n  grid-template-columns: repeat(2, 1fr);\n\n  @media screen and (min-width: 768px) {\n    grid-template-columns: repeat(4, 1fr);\n  }\n  @media screen and (min-width: 1440px) {\n    grid-template-columns: repeat(8, 1fr);\n  }\n`;\n\nexport const Li = styled.li`\n  margin-right: 16px;\n  border: none;\n  border-radius: 8px;\n  margin-bottom: 10px;\n  text-align: center;\n  &:hover {\n    cursor: pointer;\n    transform: scale(1.01);\n  }\n`;\n\nexport const LinkStyle = styled(Link)`\n  color: black;\n  margin: 0;\n  text-decoration: none;\n  margin-right: 20px;\n  &:hover {\n    cursor: pointer;\n    color: #065faf;\n  }\n`;\n\nexport const Img = styled.img`\n  height: auto;\n  width: 100%;\n  margin: 0;\n  border-radius: 4px;\n  cursor: pointer;\n`;\n\nexport const P = styled.p`\n  font-size: 20px;\n  font-family: 'Roboto', sans-serif;\n  margin: 0;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <ThreeDots\n      wrapperStyle={{ justifyContent: 'center' }}\n      height=\"150\"\n      width=\"150\"\n      color=\"#3879B3\"\n    />\n  );\n};\n\nexport default Loader;\n","import ReactPaginate from 'react-paginate';\nimport './Pagination.css';\nimport { BiChevronsRight, BiChevronsLeft } from 'react-icons/bi';\n\nfunction PaginatedItems({ totalPages, setPage, currentPage }) {\n  const handlePageClick = event => {\n    setPage({ page: event.selected + 1 });\n  };\n\n  return (\n    <>\n      <ReactPaginate\n        nextLabel={<BiChevronsRight size={18} />}\n        onPageChange={handlePageClick}\n        pageRangeDisplayed={5}\n        marginPagesDisplayed={1}\n        pageCount={totalPages}\n        forcePage={currentPage}\n        previousLabel={<BiChevronsLeft size={18} />}\n        pageClassName=\"page-item\"\n        pageLinkClassName=\"page-link\"\n        previousClassName=\"page-item\"\n        previousLinkClassName=\"page-link\"\n        nextClassName=\"page-item\"\n        nextLinkClassName=\"page-link\"\n        breakLabel=\"...\"\n        breakClassName=\"page-item\"\n        breakLinkClassName=\"page-link\"\n        containerClassName=\"pagination\"\n        activeClassName=\"active\"\n        renderOnZeroPageCount={null}\n      />\n    </>\n  );\n}\n\nexport default PaginatedItems;\n","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport PaginatedItems from '../Pagination/Pagination';\nimport { fetchPopularMovies } from 'service/api/movies';\nimport Loader from 'components/Loader/Loader';\nimport { Ul, Li, LinkStyle, Img, P } from '../Card/Card.styled';\n\nconst Card = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const pageParam = Number(searchParams.get('page') ?? 1);\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      setLoading(true);\n      try {\n        const result = await fetchPopularMovies(pageParam);\n        setSearchParams({ page: pageParam });\n        setLoading(false);\n        setTrendingMovies({ ...result });\n      } catch (error) {}\n    };\n    fetchMovies();\n  }, [pageParam, setSearchParams]);\n\n  const elements = trendingMovies?.results?.map(\n    ({ id, title, poster_path }) => {\n      const poster = `https://image.tmdb.org/t/p/w342/${poster_path}`;\n      return (\n        <Li key={id}>\n          <LinkStyle state={{ from: location }} to={`/movies/${id}`}>\n            <Img\n              src={\n                poster_path\n                  ? poster\n                  : 'https://stringfixer.com/files/951711496.jpg'\n              }\n              alt={title}\n            />\n            <P>{title}</P>\n          </LinkStyle>\n        </Li>\n      );\n    }\n  );\n\n  return (\n    <div>\n      <Ul>{elements}</Ul>\n      {trendingMovies?.total_pages && (\n        <PaginatedItems\n          setPage={setSearchParams}\n          totalPages={trendingMovies.total_pages}\n          currentPage={pageParam - 1}\n        />\n      )}\n      {loading && <Loader />}\n    </div>\n  );\n};\n\nexport default Card;\n","import Card from 'components/Card/Card';\n\nconst HomePage = () => {\n  return (\n    <div>\n      <Card />\n    </div>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst API_KEY = 'a8a59e66b66adbb574444d8f25b60183';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchPopularMovies = async page => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`\n  );\n  return data;\n};\n\nexport const fetchSingleMovie = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const fetchMovieCasts = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return data.results;\n};\n\nexport const fetchMoviesBySearchQuery = async (query, page) => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n  );\n  return data;\n};\n"],"names":["Ul","styled","Li","LinkStyle","Link","Img","P","wrapperStyle","justifyContent","height","width","color","totalPages","setPage","currentPage","nextLabel","size","onPageChange","event","page","selected","pageRangeDisplayed","marginPagesDisplayed","pageCount","forcePage","previousLabel","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakLabel","breakClassName","breakLinkClassName","containerClassName","activeClassName","renderOnZeroPageCount","useState","trendingMovies","setTrendingMovies","loading","setLoading","useSearchParams","searchParams","setSearchParams","pageParam","Number","get","location","useLocation","useEffect","fetchMovies","fetchPopularMovies","result","elements","results","map","id","title","poster_path","poster","state","from","to","src","alt","total_pages","Loader","API_KEY","BASE_URL","axios","data","fetchSingleMovie","fetchMovieCasts","cast","fetchMovieReviews","fetchMoviesBySearchQuery","query"],"sourceRoot":""}
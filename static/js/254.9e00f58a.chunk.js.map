{"version":3,"file":"static/js/254.9e00f58a.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","pages/NotFoundPage/NotFoundPage.jsx","pages/SingleMoviePage/SingleMoviePage.jsx","pages/SingleMoviePage/SingleMoviePage.styled.jsx","service/api/movies.js"],"sourcesContent":["import { ThreeDots } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <ThreeDots\n      wrapperStyle={{ justifyContent: 'center' }}\n      height=\"150\"\n      width=\"150\"\n      color=\"#2DB5A4\"\n    />\n  );\n};\n\nexport default Loader;\n","import { useLocation } from 'react-router-dom';\nimport {\n  Container,\n  H2,\n  NavLinkStyle,\n} from '../SingleMoviePage/SingleMoviePage.styled';\n\nconst NotFoundPage = () => {\n  const location = useLocation();\n  const from = location.state?.from || '/';\n\n  return (\n    <Container>\n      <H2>Page not found</H2>\n      <NavLinkStyle state={{ from }} to=\"/\">\n        Back to home\n      </NavLinkStyle>\n    </Container>\n  );\n};\n\nexport default NotFoundPage;\n","import { useState, useEffect } from 'react';\n\nimport { useParams, Outlet, useLocation, useNavigate } from 'react-router-dom';\n\nimport Loader from 'components/Loader/Loader';\nimport NotFoundPage from 'pages/NotFoundPage/NotFoundPage';\n\nimport { fetchSingleMovie } from 'service/api/movies';\n\nimport { FiChevronsLeft } from 'react-icons/fi';\n\nimport {\n  Container,\n  CardContainer,\n  InfoContainer,\n  H2,\n  H3,\n  P,\n  Img,\n  Button,\n  Ul,\n  Li,\n  Div,\n  NavLinkStyle,\n} from './SingleMoviePage.styled';\n\nconst SingleMoviePage = () => {\n  const [state, setState] = useState({\n    item: {},\n    loading: false,\n    error: null,\n  });\n\n  const { id } = useParams();\n  const location = useLocation();\n  const from = location.state?.from || '/';\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const fetchSingleMovieById = async () => {\n      setState(prevState => {\n        return { ...prevState, loading: true, error: null };\n      });\n      try {\n        const result = await fetchSingleMovie(id);\n        setState(prevState => {\n          return {\n            ...prevState,\n            loading: false,\n            item: { ...result },\n          };\n        });\n      } catch (error) {\n        setState(prevState => {\n          return {\n            ...prevState,\n            loading: false,\n            error,\n          };\n        });\n      }\n    };\n    fetchSingleMovieById();\n  }, [id]);\n\n  const goBack = () => navigate(from);\n\n  const { poster_path, title, genres, release_date, vote_average, overview } =\n    state.item;\n  const image = `https://image.tmdb.org/t/p/w342/${poster_path}`;\n  const release = release_date !== undefined ? release_date.slice(0, 4) : '';\n  const genresMovie =\n    genres !== undefined\n      ? genres.map(item => {\n          return `${item.name} `;\n        })\n      : null;\n  const vote = (vote_average * 100) / 10;\n\n  return (\n    <Container>\n      <Button onClick={goBack}>\n        <FiChevronsLeft size={20} />\n        Go back\n      </Button>\n      {state.loading && <Loader />}\n      {state.error && <NotFoundPage />}\n      <CardContainer key={id}>\n        {genres && <Img src={image} alt={title} />}\n        <InfoContainer>\n          {release && (\n            <H2>\n              {title} ({release})\n            </H2>\n          )}\n          {vote && <P>User score: {vote.toFixed()} %</P>}\n          {overview && <H3>Overview</H3>}\n          {overview && <P>{overview}</P>}\n          {genres && <H3>Genres</H3>}\n          {genresMovie !== null && <P>{genresMovie}</P>}\n        </InfoContainer>\n      </CardContainer>\n      <Div>\n        {genres && <P>Additional information:</P>}\n        <Ul>\n          <Li>\n            {genres && (\n              <NavLinkStyle state={{ from }} to={`/movies/${id}/cast`}>\n                Cast\n              </NavLinkStyle>\n            )}\n          </Li>\n          <Li>\n            {genres && (\n              <NavLinkStyle state={{ from }} to={`/movies/${id}/reviews`}>\n                Reviews\n              </NavLinkStyle>\n            )}\n          </Li>\n        </Ul>\n      </Div>\n      <Outlet />\n    </Container>\n  );\n};\n\nexport default SingleMoviePage;\n","import { NavLink } from 'react-router-dom';\n\nimport styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  padding: 0;\n`;\n\nexport const CardContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nexport const InfoContainer = styled.div`\n  padding: 0;\n`;\nexport const Img = styled.img`\n  height: 300px;\n  margin-right: 20px;\n  margin-left: 20px;\n  border-radius: 10px;\n`;\n\nexport const H2 = styled.h2`\n  font-size: 40px;\n  margin: 0;\n`;\n\nexport const H3 = styled.h3`\n  font-size: 20px;\n  margin: 0;\n`;\n\nexport const P = styled.p`\n  font-size: 14px;\n  margin: 0;\n`;\n\nexport const Button = styled.button`\n  margin-bottom: 20px;\n  background-image: linear-gradient(\n    to left,\n    #aeeee6,\n    #a1ece5,\n    #92eae4,\n    #83e8e3,\n    #71e6e3,\n    #65e1de,\n    #58dcd8,\n    #49d7d3,\n    #41cec7,\n    #3ac6bb,\n    #33bdb0,\n    #2db5a4\n  );\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  border: none;\n  font-weight: bold;\n  font-size: 16px;\n  border-radius: 50px;\n  padding: 10px 20px;\n  margin-top: 20px;\n  margin-left: 20px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    2px 2px 2px 2px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  &: hover {\n    transform: scale(1.02);\n  }\n`;\n\nexport const Div = styled.div`\n  margin-top: 20px;\n  padding: 20px;\n  box-shadow: 0px 3px 3px 0px rgba(0, 0, 0, 0.2),\n    2px 2px 2px 2px rgba(0, 0, 0, 0.14), 0px 2px 2px 2px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Ul = styled.ul`\n  display: flex;\n  flex-direction: column;\n  list-style: none;\n  margin-bottom: 0;\n  padding: 0;\n`;\n\nexport const Li = styled.li`\n  margin: 0;\n  padding: 0;\n`;\n\nexport const NavLinkStyle = styled(NavLink)`\n  text-decoration: none;\n  font-size: 20px;\n  color: black;\n  font-weight: bold;\n  &.active {\n    color: red;\n  }\n`;\n","import axios from 'axios';\n\nconst API_KEY = 'a8a59e66b66adbb574444d8f25b60183';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchPopularMovies = async page => {\n  console.log(page);\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`\n  );\n  console.log('data', data);\n  return data;\n};\n\nexport const fetchSingleMovie = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const fetchMovieCasts = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return data.results;\n};\n\nexport const fetchMoviesBySearchQuery = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return data.results;\n};\n"],"names":["wrapperStyle","justifyContent","height","width","color","from","useLocation","state","H2","to","useState","item","loading","error","setState","id","useParams","navigate","useNavigate","useEffect","fetchSingleMovieById","prevState","fetchSingleMovie","result","poster_path","title","genres","release_date","vote_average","overview","image","release","undefined","slice","genresMovie","map","name","vote","onClick","size","src","alt","P","toFixed","H3","Ul","Li","Container","styled","CardContainer","InfoContainer","Img","Button","Div","NavLinkStyle","NavLink","API_KEY","BASE_URL","fetchPopularMovies","page","console","log","axios","data","fetchMovieCasts","cast","fetchMovieReviews","results","fetchMoviesBySearchQuery","query"],"sourceRoot":""}
{"version":3,"file":"static/js/43.01d7ca58.chunk.js","mappings":"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","sources":["components/Card/Card.styled.jsx","components/Loader/Loader.jsx","components/Pagination/Pagination.jsx","components/MoviesSearchForm/MovieSearchForm.styled.jsx","components/MoviesSearchForm/MoviesSearchForm.jsx","components/MoviesSearchList/MoviesSearchList.jsx","pages/MoviesPage/MoviesPage.jsx","service/api/movies.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport { Link } from 'react-router-dom';\n\nexport const Ul = styled.ul`\n  list-style: none;\n  display: grid;\n  padding: 20px;\n  padding-left: 30px;\n  margin: 0;\n  grid-template-columns: repeat(2, 1fr);\n\n  @media screen and (min-width: 768px) {\n    grid-template-columns: repeat(4, 1fr);\n  }\n  @media screen and (min-width: 1440px) {\n    grid-template-columns: repeat(8, 1fr);\n  }\n`;\n\nexport const Li = styled.li`\n  margin-right: 16px;\n  border: none;\n  border-radius: 8px;\n  margin-bottom: 10px;\n  text-align: center;\n  &:hover {\n    cursor: pointer;\n    transform: scale(1.01);\n  }\n`;\n\nexport const LinkStyle = styled(Link)`\n  color: black;\n  margin: 0;\n  text-decoration: none;\n  margin-right: 20px;\n  &:hover {\n    cursor: pointer;\n    color: #065faf;\n  }\n`;\n\nexport const Img = styled.img`\n  height: auto;\n  width: 100%;\n  margin: 0;\n  border-radius: 4px;\n  cursor: pointer;\n`;\n\nexport const P = styled.p`\n  font-size: 20px;\n  font-family: 'Roboto', sans-serif;\n  margin: 0;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <ThreeDots\n      wrapperStyle={{ justifyContent: 'center' }}\n      height=\"150\"\n      width=\"150\"\n      color=\"#3879B3\"\n    />\n  );\n};\n\nexport default Loader;\n","import ReactPaginate from 'react-paginate';\nimport './Pagination.css';\nimport { BiChevronsRight, BiChevronsLeft } from 'react-icons/bi';\n\nfunction PaginatedItems({ totalPages, setPage, currentPage }) {\n  const handlePageClick = event => {\n    setPage({ page: event.selected + 1 });\n  };\n\n  return (\n    <>\n      <ReactPaginate\n        nextLabel={<BiChevronsRight size={18} />}\n        onPageChange={handlePageClick}\n        pageRangeDisplayed={5}\n        marginPagesDisplayed={1}\n        pageCount={totalPages}\n        forcePage={currentPage}\n        previousLabel={<BiChevronsLeft size={18} />}\n        pageClassName=\"page-item\"\n        pageLinkClassName=\"page-link\"\n        previousClassName=\"page-item\"\n        previousLinkClassName=\"page-link\"\n        nextClassName=\"page-item\"\n        nextLinkClassName=\"page-link\"\n        breakLabel=\"...\"\n        breakClassName=\"page-item\"\n        breakLinkClassName=\"page-link\"\n        containerClassName=\"pagination\"\n        activeClassName=\"active\"\n        renderOnZeroPageCount={null}\n      />\n    </>\n  );\n}\n\nexport default PaginatedItems;\n","import styled from '@emotion/styled';\n\nexport const Div = styled.div`\n  padding-top: 30px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Input = styled.input`\n  width: 200px;\n  height: 29px;\n  padding: 10px 20px;\n  border-top-left-radius: 50px;\n  border-bottom-left-radius: 50px;\n  border: 1px solid #ccc;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px,\n    rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;\n`;\n\nexport const Button = styled.button`\n  width: 50px;\n  padding: 13px 15px;\n  border-top-right-radius: 50px;\n  border-bottom-right-radius: 50px;\n  border: 1px solid #ccc;\n  cursor: pointer;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px,\n    rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;\n  background-image: linear-gradient(\n    to right,\n    #065faf,\n    #246bb0,\n    #3a76b0,\n    #4e81b0,\n    #628baf\n  );\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Div,\n  Form,\n  Input,\n  Button,\n} from '../MoviesSearchForm/MovieSearchForm.styled';\n\nimport { BiSearchAlt } from 'react-icons/bi';\n\nconst MoviesSearchForm = ({ onSubmit }) => {\n  const [state, setState] = useState({\n    search: '',\n  });\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState({ ...state, [name]: value });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ search: '' });\n  };\n  return (\n    <Div>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          name=\"search\"\n          value={state.search}\n          onChange={handleChange}\n          placeholder=\"Type search query...\"\n          required\n        />\n        <Button>\n          <BiSearchAlt size={20} />\n        </Button>\n      </Form>\n    </Div>\n  );\n};\n\nexport default MoviesSearchForm;\n\nMoviesSearchForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { fetchMoviesBySearchQuery } from 'service/api/movies';\nimport MoviesSearchForm from 'components/MoviesSearchForm/MoviesSearchForm';\nimport PaginatedItems from '../Pagination/Pagination';\nimport Loader from 'components/Loader/Loader';\nimport { Ul, Li, LinkStyle, Img, P } from 'components/Card/Card.styled';\n\nconst MoviesSearchPage = () => {\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const search = searchParams.get('query') ?? '';\n  const pageParam = Number(searchParams.get('page') ?? 1);\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchMoviesBySearch = async () => {\n      setLoading(true);\n      try {\n        const result = await fetchMoviesBySearchQuery(search, pageParam);\n        setSearchMovies({ ...result });\n        setLoading(false);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (search) {\n      fetchMoviesBySearch();\n    }\n  }, [search, pageParam]);\n\n  const onSubmit = ({ search }) => {\n    setSearchParams({ query: search, page: 1 });\n  };\n\n  const elements = searchMovies?.results?.map(({ id, title, poster_path }) => {\n    const poster = `https://image.tmdb.org/t/p/w342/${poster_path}`;\n    return (\n      <Li key={id}>\n        <LinkStyle\n          state={{ from: location }}\n          to={`/movies/${id}?query=${search}&page=${pageParam}`}\n        >\n          <Img\n            src={\n              poster_path\n                ? poster\n                : 'https://stringfixer.com/files/951711496.jpg'\n            }\n            alt={title}\n          />\n          <P>{title}</P>\n        </LinkStyle>\n      </Li>\n    );\n  });\n  return (\n    <div>\n      <MoviesSearchForm onSubmit={onSubmit} />\n      <Ul>{elements}</Ul>\n      {searchMovies.total_pages && (\n        <PaginatedItems\n          setPage={page => setSearchParams({ query: search, ...page })}\n          totalPages={searchMovies.total_pages}\n          currentPage={pageParam - 1}\n        />\n      )}\n      {loading && <Loader />}\n    </div>\n  );\n};\n\nexport default MoviesSearchPage;\n\nMoviesSearchPage.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import MoviesSearchList from 'components/MoviesSearchList/MoviesSearchList';\n\nconst MoviesPage = () => {\n  return (\n    <div>\n      <MoviesSearchList />\n    </div>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst API_KEY = 'a8a59e66b66adbb574444d8f25b60183';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchPopularMovies = async page => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`\n  );\n  return data;\n};\n\nexport const fetchSingleMovie = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const fetchMovieCasts = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return data.results;\n};\n\nexport const fetchMoviesBySearchQuery = async (query, page) => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n  );\n  return data;\n};\n"],"names":["Ul","styled","Li","LinkStyle","Link","Img","P","wrapperStyle","justifyContent","height","width","color","totalPages","setPage","currentPage","nextLabel","size","onPageChange","event","page","selected","pageRangeDisplayed","marginPagesDisplayed","pageCount","forcePage","previousLabel","pageClassName","pageLinkClassName","previousClassName","previousLinkClassName","nextClassName","nextLinkClassName","breakLabel","breakClassName","breakLinkClassName","containerClassName","activeClassName","renderOnZeroPageCount","Div","Form","Input","Button","onSubmit","useState","search","state","setState","e","preventDefault","name","value","onChange","target","placeholder","required","searchMovies","setSearchMovies","loading","setLoading","useSearchParams","searchParams","setSearchParams","get","pageParam","Number","location","useLocation","useEffect","fetchMoviesBySearch","fetchMoviesBySearchQuery","result","console","log","message","elements","results","map","id","title","poster_path","poster","from","to","src","alt","query","total_pages","Loader","MoviesSearchList","API_KEY","BASE_URL","fetchPopularMovies","axios","data","fetchSingleMovie","fetchMovieCasts","cast","fetchMovieReviews"],"sourceRoot":""}
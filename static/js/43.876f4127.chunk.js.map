{"version":3,"file":"static/js/43.876f4127.chunk.js","mappings":"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","sources":["components/Card/Card.styled.jsx","components/Loader/Loader.jsx","components/MoviesSearchForm/MovieSearchForm.styled.jsx","components/MoviesSearchForm/MoviesSearchForm.jsx","components/MoviesSearchList/MoviesSearchList.jsx","pages/MoviesPage/MoviesPage.jsx","service/api/movies.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport { Link } from 'react-router-dom';\n\nexport const Ul = styled.ul`\n  list-style: none;\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  padding-top: 30px;\n  margin: 0;\n`;\n\nexport const Li = styled.li`\n  margin-right: 16px;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px,\n    rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;\n  border-radius: 8px;\n  margin-bottom: 10px;\n  text-align: center;\n  &:hover {\n    cursor: pointer;\n    transform: scale(1.01);\n  }\n`;\n\nexport const LinkStyle = styled(Link)`\n  color: black;\n  margin: 0;\n  text-decoration: none;\n  margin-right: 20px;\n  &:hover {\n    cursor: pointer;\n    color: #806d8c;\n  }\n`;\n\nexport const Img = styled.img`\n  height: auto;\n  width: 100%;\n  margin: 0;\n  border-radius: 4px;\n  cursor: pointer;\n`;\n\nexport const P = styled.p`\n  font-size: 12px;\n  margin: 0;\n  font-weight: bold;\n`;\n","import { ThreeDots } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <ThreeDots\n      wrapperStyle={{ justifyContent: 'center' }}\n      height=\"150\"\n      width=\"150\"\n      color=\"#2DB5A4\"\n    />\n  );\n};\n\nexport default Loader;\n","import styled from '@emotion/styled';\n\nexport const Div = styled.div`\n  padding: 50px;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Input = styled.input`\n  width: 200px;\n  height: 29px;\n  padding: 10px 20px;\n  border-top-left-radius: 50px;\n  border-bottom-left-radius: 50px;\n  border: 1px solid #ccc;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px,\n    rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;\n`;\n\nexport const Button = styled.button`\n  width: 50px;\n  padding: 13px 15px;\n  border-top-right-radius: 50px;\n  border-bottom-right-radius: 50px;\n  border: 1px solid #ccc;\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 13px 27px -5px,\n    rgba(0, 0, 0, 0.3) 0px 8px 16px -8px;\n  background-image: linear-gradient(\n    to left,\n    #aeeee6,\n    #a1ece5,\n    #92eae4,\n    #83e8e3,\n    #71e6e3,\n    #65e1de,\n    #58dcd8,\n    #49d7d3,\n    #41cec7,\n    #3ac6bb,\n    #33bdb0,\n    #2db5a4\n  );\n`;\n","import { useState } from 'react';\n\nimport {\n  Div,\n  Form,\n  Input,\n  Button,\n} from '../MoviesSearchForm/MovieSearchForm.styled';\n\nimport { BiSearchAlt } from 'react-icons/bi';\n\nconst MoviesSearchForm = ({ onSubmit }) => {\n  const [state, setState] = useState({\n    search: '',\n  });\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState({ ...state, [name]: value });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ search: '' });\n  };\n  return (\n    <Div>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          name=\"search\"\n          value={state.search}\n          onChange={handleChange}\n          placeholder=\"Type search query...\"\n          required\n        />\n        <Button>\n          <BiSearchAlt size={20} />\n        </Button>\n      </Form>\n    </Div>\n  );\n};\n\nexport default MoviesSearchForm;\n","import { useState, useEffect } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\n\nimport { fetchMoviesBySearchQuery } from 'service/api/movies';\n\nimport MoviesSearchForm from 'components/MoviesSearchForm/MoviesSearchForm';\n\nimport Loader from 'components/Loader/Loader';\n\nimport { Ul, Li, LinkStyle, Img, P } from 'components/Card/Card.styled';\n\nconst MoviesSearchPage = () => {\n  const [state, setState] = useState({\n    items: [],\n    loading: false,\n    error: null,\n  });\n\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const search = searchParams.get('query');\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchMoviesBySearch = async () => {\n      setState(prevState => {\n        return { ...prevState, loading: true, error: null };\n      });\n      try {\n        const result = await fetchMoviesBySearchQuery(search);\n        setState(prevState => {\n          return {\n            ...prevState,\n            loading: false,\n            items: [...result],\n          };\n        });\n      } catch (error) {\n        setState(prevState => {\n          return {\n            ...prevState,\n            error,\n          };\n        });\n      } finally {\n        setState(prevState => ({\n          ...prevState,\n          loading: false,\n        }));\n      }\n    };\n    if (search) {\n      fetchMoviesBySearch();\n    }\n  }, [search]);\n\n  const onSubmit = ({ search }) => {\n    setSearchParams({ query: search });\n  };\n\n  const { items, loading, error } = state;\n  const elements = items.map(({ id, title, poster_path }) => {\n    const poster = `https://image.tmdb.org/t/p/w342/${poster_path}`;\n    return (\n      <Li key={id}>\n        <LinkStyle\n          state={{ from: location }}\n          to={`/movies/${id}?query=${search}`}\n        >\n          <Img src={poster_path ? poster : null} alt={title} />\n          <P>{title}</P>\n        </LinkStyle>\n      </Li>\n    );\n  });\n  return (\n    <div>\n      <MoviesSearchForm onSubmit={onSubmit} />\n      <Ul>{elements}</Ul>\n      {loading && <Loader />}\n      {error && <p>...Movies not found</p>}\n    </div>\n  );\n};\n\nexport default MoviesSearchPage;\n","import MoviesSearchList from 'components/MoviesSearchList/MoviesSearchList';\n\nconst MoviesPage = () => {\n  return (\n    <div>\n      <MoviesSearchList />\n    </div>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst API_KEY = 'a8a59e66b66adbb574444d8f25b60183';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const fetchPopularMovies = async () => {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=1`\n  );\n  return data.results;\n};\n\nexport const fetchSingleMovie = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}?api_key=${API_KEY}`\n  );\n  return data;\n};\n\nexport const fetchMovieCasts = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return data.results;\n};\n\nexport const fetchMoviesBySearchQuery = async query => {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}`\n  );\n  return data.results;\n};\n"],"names":["Ul","styled","Li","LinkStyle","Link","Img","P","wrapperStyle","justifyContent","height","width","color","Div","Form","Input","Button","onSubmit","useState","search","state","setState","e","preventDefault","name","value","onChange","target","placeholder","required","size","items","loading","error","useSearchParams","searchParams","setSearchParams","get","location","useLocation","useEffect","fetchMoviesBySearch","prevState","fetchMoviesBySearchQuery","result","elements","map","id","title","poster_path","poster","from","to","src","alt","query","Loader","MoviesSearchList","API_KEY","BASE_URL","fetchPopularMovies","axios","data","results","fetchSingleMovie","fetchMovieCasts","cast","fetchMovieReviews"],"sourceRoot":""}